#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SHOP_SNEAKER.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SHOPGIAY")]
	public partial class dulieuDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADMIN(ADMIN instance);
    partial void UpdateADMIN(ADMIN instance);
    partial void DeleteADMIN(ADMIN instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertCHITIETDONHANG(CHITIETDONHANG instance);
    partial void UpdateCHITIETDONHANG(CHITIETDONHANG instance);
    partial void DeleteCHITIETDONHANG(CHITIETDONHANG instance);
    partial void InsertCHITIETKHUYENMAI(CHITIETKHUYENMAI instance);
    partial void UpdateCHITIETKHUYENMAI(CHITIETKHUYENMAI instance);
    partial void DeleteCHITIETKHUYENMAI(CHITIETKHUYENMAI instance);
    partial void InsertCHITIETSANPHAM(CHITIETSANPHAM instance);
    partial void UpdateCHITIETSANPHAM(CHITIETSANPHAM instance);
    partial void DeleteCHITIETSANPHAM(CHITIETSANPHAM instance);
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertGIAODIENTRANGCHINH(GIAODIENTRANGCHINH instance);
    partial void UpdateGIAODIENTRANGCHINH(GIAODIENTRANGCHINH instance);
    partial void DeleteGIAODIENTRANGCHINH(GIAODIENTRANGCHINH instance);
    partial void InsertHINHANH(HINHANH instance);
    partial void UpdateHINHANH(HINHANH instance);
    partial void DeleteHINHANH(HINHANH instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKHUYENMAI(KHUYENMAI instance);
    partial void UpdateKHUYENMAI(KHUYENMAI instance);
    partial void DeleteKHUYENMAI(KHUYENMAI instance);
    partial void InsertKICHCO(KICHCO instance);
    partial void UpdateKICHCO(KICHCO instance);
    partial void DeleteKICHCO(KICHCO instance);
    partial void InsertLOAISANPHAM(LOAISANPHAM instance);
    partial void UpdateLOAISANPHAM(LOAISANPHAM instance);
    partial void DeleteLOAISANPHAM(LOAISANPHAM instance);
    partial void InsertMAUSAC(MAUSAC instance);
    partial void UpdateMAUSAC(MAUSAC instance);
    partial void DeleteMAUSAC(MAUSAC instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertNHANHANG(NHANHANG instance);
    partial void UpdateNHANHANG(NHANHANG instance);
    partial void DeleteNHANHANG(NHANHANG instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    partial void InsertCHITIETPHIEUNHAP(CHITIETPHIEUNHAP instance);
    partial void UpdateCHITIETPHIEUNHAP(CHITIETPHIEUNHAP instance);
    partial void DeleteCHITIETPHIEUNHAP(CHITIETPHIEUNHAP instance);
    #endregion
		
		public dulieuDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SHOPGIAYConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dulieuDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dulieuDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dulieuDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dulieuDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADMIN> ADMINs
		{
			get
			{
				return this.GetTable<ADMIN>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this.GetTable<CHITIETDONHANG>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETKHUYENMAI> CHITIETKHUYENMAIs
		{
			get
			{
				return this.GetTable<CHITIETKHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETSANPHAM> CHITIETSANPHAMs
		{
			get
			{
				return this.GetTable<CHITIETSANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<GIAODIENTRANGCHINH> GIAODIENTRANGCHINHs
		{
			get
			{
				return this.GetTable<GIAODIENTRANGCHINH>();
			}
		}
		
		public System.Data.Linq.Table<HINHANH> HINHANHs
		{
			get
			{
				return this.GetTable<HINHANH>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this.GetTable<KHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<KICHCO> KICHCOs
		{
			get
			{
				return this.GetTable<KICHCO>();
			}
		}
		
		public System.Data.Linq.Table<LOAISANPHAM> LOAISANPHAMs
		{
			get
			{
				return this.GetTable<LOAISANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<MAUSAC> MAUSACs
		{
			get
			{
				return this.GetTable<MAUSAC>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHANHANG> NHANHANGs
		{
			get
			{
				return this.GetTable<NHANHANG>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this.GetTable<CHITIETPHIEUNHAP>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADMIN")]
	public partial class ADMIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAAD;
		
		private string _TENAD;
		
		private string _TENDANGNHAP;
		
		private string _MATKHAU;
		
		private string _EMAIL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAADChanging(int value);
    partial void OnMAADChanged();
    partial void OnTENADChanging(string value);
    partial void OnTENADChanged();
    partial void OnTENDANGNHAPChanging(string value);
    partial void OnTENDANGNHAPChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public ADMIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAAD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAAD
		{
			get
			{
				return this._MAAD;
			}
			set
			{
				if ((this._MAAD != value))
				{
					this.OnMAADChanging(value);
					this.SendPropertyChanging();
					this._MAAD = value;
					this.SendPropertyChanged("MAAD");
					this.OnMAADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENAD", DbType="VarChar(100)")]
		public string TENAD
		{
			get
			{
				return this._TENAD;
			}
			set
			{
				if ((this._TENAD != value))
				{
					this.OnTENADChanging(value);
					this.SendPropertyChanging();
					this._TENAD = value;
					this.SendPropertyChanged("TENAD");
					this.OnTENADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDANGNHAP", DbType="VarChar(50)")]
		public string TENDANGNHAP
		{
			get
			{
				return this._TENDANGNHAP;
			}
			set
			{
				if ((this._TENDANGNHAP != value))
				{
					this.OnTENDANGNHAPChanging(value);
					this.SendPropertyChanging();
					this._TENDANGNHAP = value;
					this.SendPropertyChanged("TENDANGNHAP");
					this.OnTENDANGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASP;
		
		private int _MALOAI;
		
		private string _TENSP;
		
		private System.Nullable<int> _GIAGOCSP;
		
		private System.Nullable<int> _SOLUONGTON;
		
		private string _MANH;
		
		private string _HINHANHBIA;
		
		private string _MAHA;
		
		private string _MOTA;
		
		private System.Nullable<int> _GIACHINHTHUCSP;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntitySet<CHITIETKHUYENMAI> _CHITIETKHUYENMAIs;
		
		private EntitySet<CHITIETSANPHAM> _CHITIETSANPHAMs;
		
		private EntitySet<CHITIETPHIEUNHAP> _CHITIETPHIEUNHAPs;
		
		private EntityRef<HINHANH> _HINHANH;
		
		private EntityRef<LOAISANPHAM> _LOAISANPHAM;
		
		private EntityRef<NHANHANG> _NHANHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnMALOAIChanging(int value);
    partial void OnMALOAIChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnGIAGOCSPChanging(System.Nullable<int> value);
    partial void OnGIAGOCSPChanged();
    partial void OnSOLUONGTONChanging(System.Nullable<int> value);
    partial void OnSOLUONGTONChanged();
    partial void OnMANHChanging(string value);
    partial void OnMANHChanged();
    partial void OnHINHANHBIAChanging(string value);
    partial void OnHINHANHBIAChanged();
    partial void OnMAHAChanging(string value);
    partial void OnMAHAChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnGIACHINHTHUCSPChanging(System.Nullable<int> value);
    partial void OnGIACHINHTHUCSPChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._CHITIETKHUYENMAIs = new EntitySet<CHITIETKHUYENMAI>(new Action<CHITIETKHUYENMAI>(this.attach_CHITIETKHUYENMAIs), new Action<CHITIETKHUYENMAI>(this.detach_CHITIETKHUYENMAIs));
			this._CHITIETSANPHAMs = new EntitySet<CHITIETSANPHAM>(new Action<CHITIETSANPHAM>(this.attach_CHITIETSANPHAMs), new Action<CHITIETSANPHAM>(this.detach_CHITIETSANPHAMs));
			this._CHITIETPHIEUNHAPs = new EntitySet<CHITIETPHIEUNHAP>(new Action<CHITIETPHIEUNHAP>(this.attach_CHITIETPHIEUNHAPs), new Action<CHITIETPHIEUNHAP>(this.detach_CHITIETPHIEUNHAPs));
			this._HINHANH = default(EntityRef<HINHANH>);
			this._LOAISANPHAM = default(EntityRef<LOAISANPHAM>);
			this._NHANHANG = default(EntityRef<NHANHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Int NOT NULL")]
		public int MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAISANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(100)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIAGOCSP", DbType="Int")]
		public System.Nullable<int> GIAGOCSP
		{
			get
			{
				return this._GIAGOCSP;
			}
			set
			{
				if ((this._GIAGOCSP != value))
				{
					this.OnGIAGOCSPChanging(value);
					this.SendPropertyChanging();
					this._GIAGOCSP = value;
					this.SendPropertyChanged("GIAGOCSP");
					this.OnGIAGOCSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGTON", DbType="Int")]
		public System.Nullable<int> SOLUONGTON
		{
			get
			{
				return this._SOLUONGTON;
			}
			set
			{
				if ((this._SOLUONGTON != value))
				{
					this.OnSOLUONGTONChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGTON = value;
					this.SendPropertyChanged("SOLUONGTON");
					this.OnSOLUONGTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANH", DbType="NChar(30)")]
		public string MANH
		{
			get
			{
				return this._MANH;
			}
			set
			{
				if ((this._MANH != value))
				{
					if (this._NHANHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHChanging(value);
					this.SendPropertyChanging();
					this._MANH = value;
					this.SendPropertyChanged("MANH");
					this.OnMANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANHBIA", DbType="NVarChar(1000)")]
		public string HINHANHBIA
		{
			get
			{
				return this._HINHANHBIA;
			}
			set
			{
				if ((this._HINHANHBIA != value))
				{
					this.OnHINHANHBIAChanging(value);
					this.SendPropertyChanging();
					this._HINHANHBIA = value;
					this.SendPropertyChanged("HINHANHBIA");
					this.OnHINHANHBIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHA", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string MAHA
		{
			get
			{
				return this._MAHA;
			}
			set
			{
				if ((this._MAHA != value))
				{
					if (this._HINHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHAChanging(value);
					this.SendPropertyChanging();
					this._MAHA = value;
					this.SendPropertyChanged("MAHA");
					this.OnMAHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(4000)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIACHINHTHUCSP", DbType="Int")]
		public System.Nullable<int> GIACHINHTHUCSP
		{
			get
			{
				return this._GIACHINHTHUCSP;
			}
			set
			{
				if ((this._GIACHINHTHUCSP != value))
				{
					this.OnGIACHINHTHUCSPChanging(value);
					this.SendPropertyChanging();
					this._GIACHINHTHUCSP = value;
					this.SendPropertyChanged("GIACHINHTHUCSP");
					this.OnGIACHINHTHUCSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETKHUYENMAI", Storage="_CHITIETKHUYENMAIs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETKHUYENMAI> CHITIETKHUYENMAIs
		{
			get
			{
				return this._CHITIETKHUYENMAIs;
			}
			set
			{
				this._CHITIETKHUYENMAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETSANPHAM", Storage="_CHITIETSANPHAMs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETSANPHAM> CHITIETSANPHAMs
		{
			get
			{
				return this._CHITIETSANPHAMs;
			}
			set
			{
				this._CHITIETSANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETPHIEUNHAP", Storage="_CHITIETPHIEUNHAPs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this._CHITIETPHIEUNHAPs;
			}
			set
			{
				this._CHITIETPHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HINHANH_SANPHAM", Storage="_HINHANH", ThisKey="MAHA", OtherKey="MAHA", IsForeignKey=true)]
		public HINHANH HINHANH
		{
			get
			{
				return this._HINHANH.Entity;
			}
			set
			{
				HINHANH previousValue = this._HINHANH.Entity;
				if (((previousValue != value) 
							|| (this._HINHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HINHANH.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._HINHANH.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MAHA = value.MAHA;
					}
					else
					{
						this._MAHA = default(string);
					}
					this.SendPropertyChanged("HINHANH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_LOAISANPHAM", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAISANPHAM LOAISANPHAM
		{
			get
			{
				return this._LOAISANPHAM.Entity;
			}
			set
			{
				LOAISANPHAM previousValue = this._LOAISANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAISANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISANPHAM.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAISANPHAM.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(int);
					}
					this.SendPropertyChanged("LOAISANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANHANG_SANPHAM", Storage="_NHANHANG", ThisKey="MANH", OtherKey="MANH", IsForeignKey=true)]
		public NHANHANG NHANHANG
		{
			get
			{
				return this._NHANHANG.Entity;
			}
			set
			{
				NHANHANG previousValue = this._NHANHANG.Entity;
				if (((previousValue != value) 
							|| (this._NHANHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANHANG.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._NHANHANG.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MANH = value.MANH;
					}
					else
					{
						this._MANH = default(string);
					}
					this.SendPropertyChanged("NHANHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETKHUYENMAIs(CHITIETKHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETKHUYENMAIs(CHITIETKHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETDONHANG")]
	public partial class CHITIETDONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADH;
		
		private int _MASP;
		
		private string _MAKC;
		
		private string _MAMS;
		
		private System.Nullable<int> _THANHTIEN;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<DONHANG> _DONHANG;
		
		private EntityRef<KICHCO> _KICHCO;
		
		private EntityRef<MAUSAC> _MAUSAC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(int value);
    partial void OnMADHChanged();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnMAKCChanging(string value);
    partial void OnMAKCChanged();
    partial void OnMAMSChanging(string value);
    partial void OnMAMSChanged();
    partial void OnTHANHTIENChanging(System.Nullable<int> value);
    partial void OnTHANHTIENChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CHITIETDONHANG()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._DONHANG = default(EntityRef<DONHANG>);
			this._KICHCO = default(EntityRef<KICHCO>);
			this._MAUSAC = default(EntityRef<MAUSAC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKC", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKC
		{
			get
			{
				return this._MAKC;
			}
			set
			{
				if ((this._MAKC != value))
				{
					if (this._KICHCO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKCChanging(value);
					this.SendPropertyChanging();
					this._MAKC = value;
					this.SendPropertyChanged("MAKC");
					this.OnMAKCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMS", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMS
		{
			get
			{
				return this._MAMS;
			}
			set
			{
				if ((this._MAMS != value))
				{
					if (this._MAUSAC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMSChanging(value);
					this.SendPropertyChanging();
					this._MAMS = value;
					this.SendPropertyChanged("MAMS");
					this.OnMAMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Int")]
		public System.Nullable<int> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETDONHANG", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDONHANG", Storage="_DONHANG", ThisKey="MADH", OtherKey="MADH", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MADH = value.MADH;
					}
					else
					{
						this._MADH = default(int);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHCO_CHITIETDONHANG", Storage="_KICHCO", ThisKey="MAKC", OtherKey="MAKC", IsForeignKey=true)]
		public KICHCO KICHCO
		{
			get
			{
				return this._KICHCO.Entity;
			}
			set
			{
				KICHCO previousValue = this._KICHCO.Entity;
				if (((previousValue != value) 
							|| (this._KICHCO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KICHCO.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._KICHCO.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MAKC = value.MAKC;
					}
					else
					{
						this._MAKC = default(string);
					}
					this.SendPropertyChanged("KICHCO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAUSAC_CHITIETDONHANG", Storage="_MAUSAC", ThisKey="MAMS", OtherKey="MAMS", IsForeignKey=true)]
		public MAUSAC MAUSAC
		{
			get
			{
				return this._MAUSAC.Entity;
			}
			set
			{
				MAUSAC previousValue = this._MAUSAC.Entity;
				if (((previousValue != value) 
							|| (this._MAUSAC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAUSAC.Entity = null;
						previousValue.CHITIETDONHANGs.Remove(this);
					}
					this._MAUSAC.Entity = value;
					if ((value != null))
					{
						value.CHITIETDONHANGs.Add(this);
						this._MAMS = value.MAMS;
					}
					else
					{
						this._MAMS = default(string);
					}
					this.SendPropertyChanged("MAUSAC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETKHUYENMAI")]
	public partial class CHITIETKHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKM;
		
		private int _MASP;
		
		private System.Nullable<double> _TILEGIAM;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<KHUYENMAI> _KHUYENMAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKMChanging(string value);
    partial void OnMAKMChanged();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnTILEGIAMChanging(System.Nullable<double> value);
    partial void OnTILEGIAMChanged();
    #endregion
		
		public CHITIETKHUYENMAI()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._KHUYENMAI = default(EntityRef<KHUYENMAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKM", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKM
		{
			get
			{
				return this._MAKM;
			}
			set
			{
				if ((this._MAKM != value))
				{
					if (this._KHUYENMAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKMChanging(value);
					this.SendPropertyChanging();
					this._MAKM = value;
					this.SendPropertyChanged("MAKM");
					this.OnMAKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TILEGIAM", DbType="Float")]
		public System.Nullable<double> TILEGIAM
		{
			get
			{
				return this._TILEGIAM;
			}
			set
			{
				if ((this._TILEGIAM != value))
				{
					this.OnTILEGIAMChanging(value);
					this.SendPropertyChanging();
					this._TILEGIAM = value;
					this.SendPropertyChanged("TILEGIAM");
					this.OnTILEGIAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETKHUYENMAI", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETKHUYENMAIs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETKHUYENMAIs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_CHITIETKHUYENMAI", Storage="_KHUYENMAI", ThisKey="MAKM", OtherKey="MAKM", IsForeignKey=true)]
		public KHUYENMAI KHUYENMAI
		{
			get
			{
				return this._KHUYENMAI.Entity;
			}
			set
			{
				KHUYENMAI previousValue = this._KHUYENMAI.Entity;
				if (((previousValue != value) 
							|| (this._KHUYENMAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHUYENMAI.Entity = null;
						previousValue.CHITIETKHUYENMAIs.Remove(this);
					}
					this._KHUYENMAI.Entity = value;
					if ((value != null))
					{
						value.CHITIETKHUYENMAIs.Add(this);
						this._MAKM = value.MAKM;
					}
					else
					{
						this._MAKM = default(string);
					}
					this.SendPropertyChanged("KHUYENMAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETSANPHAM")]
	public partial class CHITIETSANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MASP;
		
		private string _MAKC;
		
		private string _MAMS;
		
		private string _MOTA;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<KICHCO> _KICHCO;
		
		private EntityRef<MAUSAC> _MAUSAC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnMAKCChanging(string value);
    partial void OnMAKCChanged();
    partial void OnMAMSChanging(string value);
    partial void OnMAMSChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CHITIETSANPHAM()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._KICHCO = default(EntityRef<KICHCO>);
			this._MAUSAC = default(EntityRef<MAUSAC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKC", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKC
		{
			get
			{
				return this._MAKC;
			}
			set
			{
				if ((this._MAKC != value))
				{
					if (this._KICHCO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKCChanging(value);
					this.SendPropertyChanging();
					this._MAKC = value;
					this.SendPropertyChanged("MAKC");
					this.OnMAKCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMS", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMS
		{
			get
			{
				return this._MAMS;
			}
			set
			{
				if ((this._MAMS != value))
				{
					if (this._MAUSAC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMSChanging(value);
					this.SendPropertyChanging();
					this._MAMS = value;
					this.SendPropertyChanged("MAMS");
					this.OnMAMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(4000)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETSANPHAM", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETSANPHAMs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETSANPHAMs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHCO_CHITIETSANPHAM", Storage="_KICHCO", ThisKey="MAKC", OtherKey="MAKC", IsForeignKey=true)]
		public KICHCO KICHCO
		{
			get
			{
				return this._KICHCO.Entity;
			}
			set
			{
				KICHCO previousValue = this._KICHCO.Entity;
				if (((previousValue != value) 
							|| (this._KICHCO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KICHCO.Entity = null;
						previousValue.CHITIETSANPHAMs.Remove(this);
					}
					this._KICHCO.Entity = value;
					if ((value != null))
					{
						value.CHITIETSANPHAMs.Add(this);
						this._MAKC = value.MAKC;
					}
					else
					{
						this._MAKC = default(string);
					}
					this.SendPropertyChanged("KICHCO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAUSAC_CHITIETSANPHAM", Storage="_MAUSAC", ThisKey="MAMS", OtherKey="MAMS", IsForeignKey=true)]
		public MAUSAC MAUSAC
		{
			get
			{
				return this._MAUSAC.Entity;
			}
			set
			{
				MAUSAC previousValue = this._MAUSAC.Entity;
				if (((previousValue != value) 
							|| (this._MAUSAC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAUSAC.Entity = null;
						previousValue.CHITIETSANPHAMs.Remove(this);
					}
					this._MAUSAC.Entity = value;
					if ((value != null))
					{
						value.CHITIETSANPHAMs.Add(this);
						this._MAMS = value.MAMS;
					}
					else
					{
						this._MAMS = default(string);
					}
					this.SendPropertyChanged("MAUSAC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MADH;
		
		private System.Nullable<int> _MAKH;
		
		private System.Nullable<System.DateTime> _NGAYDAT;
		
		private System.Nullable<System.DateTime> _NGAYGIAO;
		
		private string _TRANGTHAI;
		
		private string _GHITRU;
		
		private string _TINHTHANH;
		
		private string _QUAN;
		
		private string _PHUONG;
		
		private string _DIACHICUTHE;
		
		private string _GHITRUHUYHANG;
		
		private System.Nullable<int> _TONGTIEN;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADHChanging(int value);
    partial void OnMADHChanged();
    partial void OnMAKHChanging(System.Nullable<int> value);
    partial void OnMAKHChanged();
    partial void OnNGAYDATChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDATChanged();
    partial void OnNGAYGIAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYGIAOChanged();
    partial void OnTRANGTHAIChanging(string value);
    partial void OnTRANGTHAIChanged();
    partial void OnGHITRUChanging(string value);
    partial void OnGHITRUChanged();
    partial void OnTINHTHANHChanging(string value);
    partial void OnTINHTHANHChanged();
    partial void OnQUANChanging(string value);
    partial void OnQUANChanged();
    partial void OnPHUONGChanging(string value);
    partial void OnPHUONGChanged();
    partial void OnDIACHICUTHEChanging(string value);
    partial void OnDIACHICUTHEChanged();
    partial void OnGHITRUHUYHANGChanging(string value);
    partial void OnGHITRUHUYHANGChanged();
    partial void OnTONGTIENChanging(System.Nullable<int> value);
    partial void OnTONGTIENChanged();
    #endregion
		
		public DONHANG()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MADH
		{
			get
			{
				return this._MADH;
			}
			set
			{
				if ((this._MADH != value))
				{
					this.OnMADHChanging(value);
					this.SendPropertyChanging();
					this._MADH = value;
					this.SendPropertyChanged("MADH");
					this.OnMADHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int")]
		public System.Nullable<int> MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDAT", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYDAT
		{
			get
			{
				return this._NGAYDAT;
			}
			set
			{
				if ((this._NGAYDAT != value))
				{
					this.OnNGAYDATChanging(value);
					this.SendPropertyChanging();
					this._NGAYDAT = value;
					this.SendPropertyChanged("NGAYDAT");
					this.OnNGAYDATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYGIAO", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYGIAO
		{
			get
			{
				return this._NGAYGIAO;
			}
			set
			{
				if ((this._NGAYGIAO != value))
				{
					this.OnNGAYGIAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYGIAO = value;
					this.SendPropertyChanged("NGAYGIAO");
					this.OnNGAYGIAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="NVarChar(50)")]
		public string TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHITRU", DbType="NVarChar(4000)")]
		public string GHITRU
		{
			get
			{
				return this._GHITRU;
			}
			set
			{
				if ((this._GHITRU != value))
				{
					this.OnGHITRUChanging(value);
					this.SendPropertyChanging();
					this._GHITRU = value;
					this.SendPropertyChanged("GHITRU");
					this.OnGHITRUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTHANH", DbType="NVarChar(200)")]
		public string TINHTHANH
		{
			get
			{
				return this._TINHTHANH;
			}
			set
			{
				if ((this._TINHTHANH != value))
				{
					this.OnTINHTHANHChanging(value);
					this.SendPropertyChanging();
					this._TINHTHANH = value;
					this.SendPropertyChanged("TINHTHANH");
					this.OnTINHTHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUAN", DbType="NVarChar(200)")]
		public string QUAN
		{
			get
			{
				return this._QUAN;
			}
			set
			{
				if ((this._QUAN != value))
				{
					this.OnQUANChanging(value);
					this.SendPropertyChanging();
					this._QUAN = value;
					this.SendPropertyChanged("QUAN");
					this.OnQUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHUONG", DbType="NVarChar(200)")]
		public string PHUONG
		{
			get
			{
				return this._PHUONG;
			}
			set
			{
				if ((this._PHUONG != value))
				{
					this.OnPHUONGChanging(value);
					this.SendPropertyChanging();
					this._PHUONG = value;
					this.SendPropertyChanged("PHUONG");
					this.OnPHUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHICUTHE", DbType="NVarChar(4000)")]
		public string DIACHICUTHE
		{
			get
			{
				return this._DIACHICUTHE;
			}
			set
			{
				if ((this._DIACHICUTHE != value))
				{
					this.OnDIACHICUTHEChanging(value);
					this.SendPropertyChanging();
					this._DIACHICUTHE = value;
					this.SendPropertyChanged("DIACHICUTHE");
					this.OnDIACHICUTHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHITRUHUYHANG", DbType="NVarChar(4000)")]
		public string GHITRUHUYHANG
		{
			get
			{
				return this._GHITRUHUYHANG;
			}
			set
			{
				if ((this._GHITRUHUYHANG != value))
				{
					this.OnGHITRUHUYHANGChanging(value);
					this.SendPropertyChanging();
					this._GHITRUHUYHANG = value;
					this.SendPropertyChanged("GHITRUHUYHANG");
					this.OnGHITRUHUYHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Int")]
		public System.Nullable<int> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MADH", OtherKey="MADH")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIAODIENTRANGCHINH")]
	public partial class GIAODIENTRANGCHINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MA;
		
		private string _TEN;
		
		private string _MOTA;
		
		private string _TIEUDE;
		
		private string _NOIDUNG;
		
		private string _HINHANH;
		
		private string _DUONGDAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAChanging(string value);
    partial void OnMAChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnTIEUDEChanging(string value);
    partial void OnTIEUDEChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnDUONGDANChanging(string value);
    partial void OnDUONGDANChanged();
    #endregion
		
		public GIAODIENTRANGCHINH()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MA
		{
			get
			{
				return this._MA;
			}
			set
			{
				if ((this._MA != value))
				{
					this.OnMAChanging(value);
					this.SendPropertyChanging();
					this._MA = value;
					this.SendPropertyChanged("MA");
					this.OnMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(100)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(500)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEUDE", DbType="NVarChar(255)")]
		public string TIEUDE
		{
			get
			{
				return this._TIEUDE;
			}
			set
			{
				if ((this._TIEUDE != value))
				{
					this.OnTIEUDEChanging(value);
					this.SendPropertyChanging();
					this._TIEUDE = value;
					this.SendPropertyChanged("TIEUDE");
					this.OnTIEUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(1000)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="NVarChar(200)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUONGDAN", DbType="NVarChar(200)")]
		public string DUONGDAN
		{
			get
			{
				return this._DUONGDAN;
			}
			set
			{
				if ((this._DUONGDAN != value))
				{
					this.OnDUONGDANChanging(value);
					this.SendPropertyChanging();
					this._DUONGDAN = value;
					this.SendPropertyChanged("DUONGDAN");
					this.OnDUONGDANChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HINHANH")]
	public partial class HINHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHA;
		
		private string _TENHINHANH;
		
		private string _DUONGDAN;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHAChanging(string value);
    partial void OnMAHAChanged();
    partial void OnTENHINHANHChanging(string value);
    partial void OnTENHINHANHChanged();
    partial void OnDUONGDANChanging(string value);
    partial void OnDUONGDANChanged();
    #endregion
		
		public HINHANH()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHA", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHA
		{
			get
			{
				return this._MAHA;
			}
			set
			{
				if ((this._MAHA != value))
				{
					this.OnMAHAChanging(value);
					this.SendPropertyChanging();
					this._MAHA = value;
					this.SendPropertyChanged("MAHA");
					this.OnMAHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHINHANH", DbType="NVarChar(200)")]
		public string TENHINHANH
		{
			get
			{
				return this._TENHINHANH;
			}
			set
			{
				if ((this._TENHINHANH != value))
				{
					this.OnTENHINHANHChanging(value);
					this.SendPropertyChanging();
					this._TENHINHANH = value;
					this.SendPropertyChanged("TENHINHANH");
					this.OnTENHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUONGDAN", DbType="NVarChar(500)")]
		public string DUONGDAN
		{
			get
			{
				return this._DUONGDAN;
			}
			set
			{
				if ((this._DUONGDAN != value))
				{
					this.OnDUONGDANChanging(value);
					this.SendPropertyChanging();
					this._DUONGDAN = value;
					this.SendPropertyChanged("DUONGDAN");
					this.OnDUONGDANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HINHANH_SANPHAM", Storage="_SANPHAMs", ThisKey="MAHA", OtherKey="MAHA")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HINHANH = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HINHANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKH;
		
		private string _TENKH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _GIOITINH;
		
		private string _DIACHI;
		
		private string _SODIENTHOAI;
		
		private string _SOTHICH;
		
		private string _TENDANGNHAP;
		
		private string _MATKHAU;
		
		private EntitySet<DONHANG> _DONHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSODIENTHOAIChanging(string value);
    partial void OnSODIENTHOAIChanged();
    partial void OnSOTHICHChanging(string value);
    partial void OnSOTHICHChanged();
    partial void OnTENDANGNHAPChanging(string value);
    partial void OnTENDANGNHAPChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(100)")]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(10)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(500)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODIENTHOAI", DbType="VarChar(15)")]
		public string SODIENTHOAI
		{
			get
			{
				return this._SODIENTHOAI;
			}
			set
			{
				if ((this._SODIENTHOAI != value))
				{
					this.OnSODIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._SODIENTHOAI = value;
					this.SendPropertyChanged("SODIENTHOAI");
					this.OnSODIENTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTHICH", DbType="NVarChar(500)")]
		public string SOTHICH
		{
			get
			{
				return this._SOTHICH;
			}
			set
			{
				if ((this._SOTHICH != value))
				{
					this.OnSOTHICHChanging(value);
					this.SendPropertyChanging();
					this._SOTHICH = value;
					this.SendPropertyChanged("SOTHICH");
					this.OnSOTHICHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDANGNHAP", DbType="NChar(50)")]
		public string TENDANGNHAP
		{
			get
			{
				return this._TENDANGNHAP;
			}
			set
			{
				if ((this._TENDANGNHAP != value))
				{
					this.OnTENDANGNHAPChanging(value);
					this.SendPropertyChanging();
					this._TENDANGNHAP = value;
					this.SendPropertyChanged("TENDANGNHAP");
					this.OnTENDANGNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NChar(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_DONHANG", Storage="_DONHANGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUYENMAI")]
	public partial class KHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKM;
		
		private string _TENKHUYENMAI;
		
		private System.Nullable<System.DateTime> _NGAYBATDAU;
		
		private System.Nullable<System.DateTime> _NGAYKETTHUC;
		
		private EntitySet<CHITIETKHUYENMAI> _CHITIETKHUYENMAIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKMChanging(string value);
    partial void OnMAKMChanged();
    partial void OnTENKHUYENMAIChanging(string value);
    partial void OnTENKHUYENMAIChanged();
    partial void OnNGAYBATDAUChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYBATDAUChanged();
    partial void OnNGAYKETTHUCChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYKETTHUCChanged();
    #endregion
		
		public KHUYENMAI()
		{
			this._CHITIETKHUYENMAIs = new EntitySet<CHITIETKHUYENMAI>(new Action<CHITIETKHUYENMAI>(this.attach_CHITIETKHUYENMAIs), new Action<CHITIETKHUYENMAI>(this.detach_CHITIETKHUYENMAIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKM", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKM
		{
			get
			{
				return this._MAKM;
			}
			set
			{
				if ((this._MAKM != value))
				{
					this.OnMAKMChanging(value);
					this.SendPropertyChanging();
					this._MAKM = value;
					this.SendPropertyChanged("MAKM");
					this.OnMAKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHUYENMAI", DbType="NVarChar(300)")]
		public string TENKHUYENMAI
		{
			get
			{
				return this._TENKHUYENMAI;
			}
			set
			{
				if ((this._TENKHUYENMAI != value))
				{
					this.OnTENKHUYENMAIChanging(value);
					this.SendPropertyChanging();
					this._TENKHUYENMAI = value;
					this.SendPropertyChanged("TENKHUYENMAI");
					this.OnTENKHUYENMAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBATDAU", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYBATDAU
		{
			get
			{
				return this._NGAYBATDAU;
			}
			set
			{
				if ((this._NGAYBATDAU != value))
				{
					this.OnNGAYBATDAUChanging(value);
					this.SendPropertyChanging();
					this._NGAYBATDAU = value;
					this.SendPropertyChanged("NGAYBATDAU");
					this.OnNGAYBATDAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKETTHUC", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYKETTHUC
		{
			get
			{
				return this._NGAYKETTHUC;
			}
			set
			{
				if ((this._NGAYKETTHUC != value))
				{
					this.OnNGAYKETTHUCChanging(value);
					this.SendPropertyChanging();
					this._NGAYKETTHUC = value;
					this.SendPropertyChanged("NGAYKETTHUC");
					this.OnNGAYKETTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_CHITIETKHUYENMAI", Storage="_CHITIETKHUYENMAIs", ThisKey="MAKM", OtherKey="MAKM")]
		public EntitySet<CHITIETKHUYENMAI> CHITIETKHUYENMAIs
		{
			get
			{
				return this._CHITIETKHUYENMAIs;
			}
			set
			{
				this._CHITIETKHUYENMAIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETKHUYENMAIs(CHITIETKHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = this;
		}
		
		private void detach_CHITIETKHUYENMAIs(CHITIETKHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KICHCO")]
	public partial class KICHCO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKC;
		
		private System.Nullable<int> _KICHCO1;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntitySet<CHITIETSANPHAM> _CHITIETSANPHAMs;
		
		private EntitySet<CHITIETPHIEUNHAP> _CHITIETPHIEUNHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKCChanging(string value);
    partial void OnMAKCChanged();
    partial void OnKICHCO1Changing(System.Nullable<int> value);
    partial void OnKICHCO1Changed();
    #endregion
		
		public KICHCO()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._CHITIETSANPHAMs = new EntitySet<CHITIETSANPHAM>(new Action<CHITIETSANPHAM>(this.attach_CHITIETSANPHAMs), new Action<CHITIETSANPHAM>(this.detach_CHITIETSANPHAMs));
			this._CHITIETPHIEUNHAPs = new EntitySet<CHITIETPHIEUNHAP>(new Action<CHITIETPHIEUNHAP>(this.attach_CHITIETPHIEUNHAPs), new Action<CHITIETPHIEUNHAP>(this.detach_CHITIETPHIEUNHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKC", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKC
		{
			get
			{
				return this._MAKC;
			}
			set
			{
				if ((this._MAKC != value))
				{
					this.OnMAKCChanging(value);
					this.SendPropertyChanging();
					this._MAKC = value;
					this.SendPropertyChanged("MAKC");
					this.OnMAKCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="KICHCO", Storage="_KICHCO1", DbType="Int")]
		public System.Nullable<int> KICHCO1
		{
			get
			{
				return this._KICHCO1;
			}
			set
			{
				if ((this._KICHCO1 != value))
				{
					this.OnKICHCO1Changing(value);
					this.SendPropertyChanging();
					this._KICHCO1 = value;
					this.SendPropertyChanged("KICHCO1");
					this.OnKICHCO1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHCO_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MAKC", OtherKey="MAKC")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHCO_CHITIETSANPHAM", Storage="_CHITIETSANPHAMs", ThisKey="MAKC", OtherKey="MAKC")]
		public EntitySet<CHITIETSANPHAM> CHITIETSANPHAMs
		{
			get
			{
				return this._CHITIETSANPHAMs;
			}
			set
			{
				this._CHITIETSANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHCO_CHITIETPHIEUNHAP", Storage="_CHITIETPHIEUNHAPs", ThisKey="MAKC", OtherKey="MAKC")]
		public EntitySet<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this._CHITIETPHIEUNHAPs;
			}
			set
			{
				this._CHITIETPHIEUNHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KICHCO = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.KICHCO = null;
		}
		
		private void attach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.KICHCO = this;
		}
		
		private void detach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.KICHCO = null;
		}
		
		private void attach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.KICHCO = this;
		}
		
		private void detach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.KICHCO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISANPHAM")]
	public partial class LOAISANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAI;
		
		private string _TENLOAI;
		
		private System.Nullable<int> _SOLUONGTON;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(int value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    partial void OnSOLUONGTONChanging(System.Nullable<int> value);
    partial void OnSOLUONGTONChanged();
    #endregion
		
		public LOAISANPHAM()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(100)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGTON", DbType="Int")]
		public System.Nullable<int> SOLUONGTON
		{
			get
			{
				return this._SOLUONGTON;
			}
			set
			{
				if ((this._SOLUONGTON != value))
				{
					this.OnSOLUONGTONChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGTON = value;
					this.SendPropertyChanged("SOLUONGTON");
					this.OnSOLUONGTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_SANPHAMs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAUSAC")]
	public partial class MAUSAC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMS;
		
		private string _TENMAUSAC;
		
		private EntitySet<CHITIETDONHANG> _CHITIETDONHANGs;
		
		private EntitySet<CHITIETSANPHAM> _CHITIETSANPHAMs;
		
		private EntitySet<CHITIETPHIEUNHAP> _CHITIETPHIEUNHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMSChanging(string value);
    partial void OnMAMSChanged();
    partial void OnTENMAUSACChanging(string value);
    partial void OnTENMAUSACChanged();
    #endregion
		
		public MAUSAC()
		{
			this._CHITIETDONHANGs = new EntitySet<CHITIETDONHANG>(new Action<CHITIETDONHANG>(this.attach_CHITIETDONHANGs), new Action<CHITIETDONHANG>(this.detach_CHITIETDONHANGs));
			this._CHITIETSANPHAMs = new EntitySet<CHITIETSANPHAM>(new Action<CHITIETSANPHAM>(this.attach_CHITIETSANPHAMs), new Action<CHITIETSANPHAM>(this.detach_CHITIETSANPHAMs));
			this._CHITIETPHIEUNHAPs = new EntitySet<CHITIETPHIEUNHAP>(new Action<CHITIETPHIEUNHAP>(this.attach_CHITIETPHIEUNHAPs), new Action<CHITIETPHIEUNHAP>(this.detach_CHITIETPHIEUNHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMS", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMS
		{
			get
			{
				return this._MAMS;
			}
			set
			{
				if ((this._MAMS != value))
				{
					this.OnMAMSChanging(value);
					this.SendPropertyChanging();
					this._MAMS = value;
					this.SendPropertyChanged("MAMS");
					this.OnMAMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMAUSAC", DbType="NVarChar(50)")]
		public string TENMAUSAC
		{
			get
			{
				return this._TENMAUSAC;
			}
			set
			{
				if ((this._TENMAUSAC != value))
				{
					this.OnTENMAUSACChanging(value);
					this.SendPropertyChanging();
					this._TENMAUSAC = value;
					this.SendPropertyChanged("TENMAUSAC");
					this.OnTENMAUSACChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAUSAC_CHITIETDONHANG", Storage="_CHITIETDONHANGs", ThisKey="MAMS", OtherKey="MAMS")]
		public EntitySet<CHITIETDONHANG> CHITIETDONHANGs
		{
			get
			{
				return this._CHITIETDONHANGs;
			}
			set
			{
				this._CHITIETDONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAUSAC_CHITIETSANPHAM", Storage="_CHITIETSANPHAMs", ThisKey="MAMS", OtherKey="MAMS")]
		public EntitySet<CHITIETSANPHAM> CHITIETSANPHAMs
		{
			get
			{
				return this._CHITIETSANPHAMs;
			}
			set
			{
				this._CHITIETSANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAUSAC_CHITIETPHIEUNHAP", Storage="_CHITIETPHIEUNHAPs", ThisKey="MAMS", OtherKey="MAMS")]
		public EntitySet<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this._CHITIETPHIEUNHAPs;
			}
			set
			{
				this._CHITIETPHIEUNHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.MAUSAC = this;
		}
		
		private void detach_CHITIETDONHANGs(CHITIETDONHANG entity)
		{
			this.SendPropertyChanging();
			entity.MAUSAC = null;
		}
		
		private void attach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.MAUSAC = this;
		}
		
		private void detach_CHITIETSANPHAMs(CHITIETSANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.MAUSAC = null;
		}
		
		private void attach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.MAUSAC = this;
		}
		
		private void detach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.MAUSAC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANCC;
		
		private string _TENNCC;
		
		private string _DIACHI;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANCCChanging(int value);
    partial void OnMANCCChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(100)")]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(255)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANHANG")]
	public partial class NHANHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANH;
		
		private string _TENNH;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANHChanging(string value);
    partial void OnMANHChanged();
    partial void OnTENNHChanging(string value);
    partial void OnTENNHChanged();
    #endregion
		
		public NHANHANG()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANH", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANH
		{
			get
			{
				return this._MANH;
			}
			set
			{
				if ((this._MANH != value))
				{
					this.OnMANHChanging(value);
					this.SendPropertyChanging();
					this._MANH = value;
					this.SendPropertyChanged("MANH");
					this.OnMANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNH", DbType="NVarChar(200)")]
		public string TENNH
		{
			get
			{
				return this._TENNH;
			}
			set
			{
				if ((this._TENNH != value))
				{
					this.OnTENNHChanging(value);
					this.SendPropertyChanging();
					this._TENNH = value;
					this.SendPropertyChanged("TENNH");
					this.OnTENNHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANHANG_SANPHAM", Storage="_SANPHAMs", ThisKey="MANH", OtherKey="MANH")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHANHANG = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NHANHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPN;
		
		private System.Nullable<int> _MANCC;
		
		private System.Nullable<System.DateTime> _NGAYNHAP;
		
		private System.Nullable<int> _TONGTIEN;
		
		private string _TRANGTHAI;
		
		private EntitySet<CHITIETPHIEUNHAP> _CHITIETPHIEUNHAPs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPNChanging(int value);
    partial void OnMAPNChanged();
    partial void OnMANCCChanging(System.Nullable<int> value);
    partial void OnMANCCChanged();
    partial void OnNGAYNHAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHAPChanged();
    partial void OnTONGTIENChanging(System.Nullable<int> value);
    partial void OnTONGTIENChanged();
    partial void OnTRANGTHAIChanging(string value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._CHITIETPHIEUNHAPs = new EntitySet<CHITIETPHIEUNHAP>(new Action<CHITIETPHIEUNHAP>(this.attach_CHITIETPHIEUNHAPs), new Action<CHITIETPHIEUNHAP>(this.detach_CHITIETPHIEUNHAPs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPN
		{
			get
			{
				return this._MAPN;
			}
			set
			{
				if ((this._MAPN != value))
				{
					this.OnMAPNChanging(value);
					this.SendPropertyChanging();
					this._MAPN = value;
					this.SendPropertyChanged("MAPN");
					this.OnMAPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Int")]
		public System.Nullable<int> MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYNHAP
		{
			get
			{
				return this._NGAYNHAP;
			}
			set
			{
				if ((this._NGAYNHAP != value))
				{
					this.OnNGAYNHAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAP = value;
					this.SendPropertyChanged("NGAYNHAP");
					this.OnNGAYNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Int")]
		public System.Nullable<int> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="NVarChar(50)")]
		public string TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETPHIEUNHAP", Storage="_CHITIETPHIEUNHAPs", ThisKey="MAPN", OtherKey="MAPN")]
		public EntitySet<CHITIETPHIEUNHAP> CHITIETPHIEUNHAPs
		{
			get
			{
				return this._CHITIETPHIEUNHAPs;
			}
			set
			{
				this._CHITIETPHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAP", Storage="_NHACUNGCAP", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = this;
		}
		
		private void detach_CHITIETPHIEUNHAPs(CHITIETPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETPHIEUNHAP")]
	public partial class CHITIETPHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPN;
		
		private int _MASP;
		
		private string _MAKC;
		
		private string _MAMS;
		
		private System.Nullable<int> _DONGIA;
		
		private System.Nullable<int> _SOLUONG;
		
		private EntityRef<KICHCO> _KICHCO;
		
		private EntityRef<MAUSAC> _MAUSAC;
		
		private EntityRef<PHIEUNHAP> _PHIEUNHAP;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPNChanging(int value);
    partial void OnMAPNChanged();
    partial void OnMASPChanging(int value);
    partial void OnMASPChanged();
    partial void OnMAKCChanging(string value);
    partial void OnMAKCChanged();
    partial void OnMAMSChanging(string value);
    partial void OnMAMSChanged();
    partial void OnDONGIAChanging(System.Nullable<int> value);
    partial void OnDONGIAChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    #endregion
		
		public CHITIETPHIEUNHAP()
		{
			this._KICHCO = default(EntityRef<KICHCO>);
			this._MAUSAC = default(EntityRef<MAUSAC>);
			this._PHIEUNHAP = default(EntityRef<PHIEUNHAP>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPN
		{
			get
			{
				return this._MAPN;
			}
			set
			{
				if ((this._MAPN != value))
				{
					if (this._PHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPNChanging(value);
					this.SendPropertyChanging();
					this._MAPN = value;
					this.SendPropertyChanged("MAPN");
					this.OnMAPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKC", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKC
		{
			get
			{
				return this._MAKC;
			}
			set
			{
				if ((this._MAKC != value))
				{
					if (this._KICHCO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKCChanging(value);
					this.SendPropertyChanging();
					this._MAKC = value;
					this.SendPropertyChanged("MAKC");
					this.OnMAKCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMS", DbType="NChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMS
		{
			get
			{
				return this._MAMS;
			}
			set
			{
				if ((this._MAMS != value))
				{
					if (this._MAUSAC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMSChanging(value);
					this.SendPropertyChanging();
					this._MAMS = value;
					this.SendPropertyChanged("MAMS");
					this.OnMAMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Int")]
		public System.Nullable<int> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KICHCO_CHITIETPHIEUNHAP", Storage="_KICHCO", ThisKey="MAKC", OtherKey="MAKC", IsForeignKey=true)]
		public KICHCO KICHCO
		{
			get
			{
				return this._KICHCO.Entity;
			}
			set
			{
				KICHCO previousValue = this._KICHCO.Entity;
				if (((previousValue != value) 
							|| (this._KICHCO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KICHCO.Entity = null;
						previousValue.CHITIETPHIEUNHAPs.Remove(this);
					}
					this._KICHCO.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUNHAPs.Add(this);
						this._MAKC = value.MAKC;
					}
					else
					{
						this._MAKC = default(string);
					}
					this.SendPropertyChanged("KICHCO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAUSAC_CHITIETPHIEUNHAP", Storage="_MAUSAC", ThisKey="MAMS", OtherKey="MAMS", IsForeignKey=true)]
		public MAUSAC MAUSAC
		{
			get
			{
				return this._MAUSAC.Entity;
			}
			set
			{
				MAUSAC previousValue = this._MAUSAC.Entity;
				if (((previousValue != value) 
							|| (this._MAUSAC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAUSAC.Entity = null;
						previousValue.CHITIETPHIEUNHAPs.Remove(this);
					}
					this._MAUSAC.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUNHAPs.Add(this);
						this._MAMS = value.MAMS;
					}
					else
					{
						this._MAMS = default(string);
					}
					this.SendPropertyChanged("MAUSAC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETPHIEUNHAP", Storage="_PHIEUNHAP", ThisKey="MAPN", OtherKey="MAPN", IsForeignKey=true)]
		public PHIEUNHAP PHIEUNHAP
		{
			get
			{
				return this._PHIEUNHAP.Entity;
			}
			set
			{
				PHIEUNHAP previousValue = this._PHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAP.Entity = null;
						previousValue.CHITIETPHIEUNHAPs.Remove(this);
					}
					this._PHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUNHAPs.Add(this);
						this._MAPN = value.MAPN;
					}
					else
					{
						this._MAPN = default(int);
					}
					this.SendPropertyChanged("PHIEUNHAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETPHIEUNHAP", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETPHIEUNHAPs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETPHIEUNHAPs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
